let responder_close_timeout;class Responder{add(e,r){let o,s,n=e;return n.find("responder:not([deleted])").length?(console.log("Found Responder, manipulating..."),clearTimeout(responder_close_timeout),o=n.find("responder:not(.deleted)"),this.manipulate(o,r)):(console.log("No Responder found, adding new..."),n.prepend("<responder><r-inr>"+r+"</r-inr></responder > "),s={responder:null,append:n},o=n.find("responder:not([deleted])"),setTimeout(()=>{o.addClass("active")},100),responder_close_timeout=setTimeout(()=>{this.close(o)},6e3),s.responder=o,s)}manipulate(e,r){let o=e;return o.removeClass("active"),o.find("r-inr").html(r),setTimeout(()=>{o.addClass("active")},300),responder_close_timeout=setTimeout(()=>{this.close(o)},6e3),!0}close(e){let r,o=e;return r={responder:o},r.responder.addClass("deleted"),r.responder.removeClass("active"),setTimeout(()=>{r.responder.remove()},600),r}}let responder=new Responder;