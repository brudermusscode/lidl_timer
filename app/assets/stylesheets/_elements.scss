logo {
  display: block;
  line-height: 1;
  color: $blue;
  font-size: 6em;
  font-weight: 800;
  text-shadow: -2px 2px 0 rgba(0, 0, 0, 0.1);

  .logo-spacer {
    display: inline-block;
    margin-left: 0.24em;
  }

  .the-i {
    display: inline-block;
    position: absolute;
    transform: rotate(-45deg);
    color: $red;
    margin: 0.04em 0 0 -0.16em;
    font-size: 1em;
  }
}

responder {
  display: block;
  max-width: $main-smol-width;
  height: auto;
  bottom: -120px;
  left: 1.2em;
  position: fixed;
  z-index: 1000000;
  background: $dark;
  transition: bottom 0.75s cubic-bezier(0.1, 0.82, 0.25, 1);

  @extend [rounded], [shadowed="mid"];

  r-inr {
    display: inline-block;
    padding: 1.8em 2.6em;
    color: $light;

    @extend .tac;
  }

  &.active {
    bottom: 1.2em;
  }
}

header-model {
  display: block;
  position: fixed;
  top: 4.2em;
  width: calc(100% - (2 * 1.2em));
  max-width: $main-mid-width;
  left: 50%;
  transform: translateX(-50%);
  border-radius: 24px;
  z-index: 1;

  @media screen and (max-width: calc(1110px + (2* 1.2em))) {
    border-radius: 0;
    top: 0;
    max-width: 100%;
    width: 100%;
  }
}

box-model {
  display: block;

  &[shadowed] {
    @extend .mshd-1;

    &[shadowed="std"] {
      @extend .mshd-1;
    }

    &[shadowed="mid"] {
      @extend .mshd-2;
    }

    &[shadowed="wide"] {
      @extend .mshd-3;
    }
  }

  &[light] {
    background: $light;
    color: $dark;
  }

  &[dark] {
    background: $dark;
    color: $light;
  }

  &[white] {
    background: white;
  }

  bm-inr {
    display: block;
    padding: 1.6em 2em;

    &[size] {
      &[size="smol"] {
        padding: 1em 1.4em;
      }

      &[size="std"] {
        padding: 1.6em 2em;
      }

      &[size="mid"] {
        padding: 2.2em 2.8em;
      }

      &[size="wide"] {
        padding: 3em 3.4em;
      }
    }
  }

  @media screen and (max-width: 600px) {
    border-radius: 0 !important;
    width: 100%;
  }
}

label {
  display: block;
  margin: 0;
  padding: 0.4em 2em;
  border: none;
  outline: none;
  font-size: 1.2em;
  line-height: 1.6em;
  font-weight: 600;
  text-transform: uppercase;

  .text {
    @extend .mr12;
  }

  &[big] {
    font-size: 2em;
    font-weight: 700;
  }

  &[centered] {
    @extend .disfl, .fldirrow, .flCenter;
  }

  &[dark] {
    color: $dark;
  }

  &[light] {
    color: $light;
  }

  &[text-shadowed] {
    text-shadow: 0 1px 0 rgba(0, 0, 0, 0.38);
  }

  &[background] {
    &[background="purple"] {
      background: #4d2365;
    }
  }
}

input {
  border: none;
  outline: none;
  color: $dark;

  @extend .tran-all;

  &[slight] {
    border: 1px solid rgba(0, 0, 0, 0.12);
    padding: 0 1.6em;
    line-height: 3.2em;
    font-weight: 400;

    &:focus {
      border: 1px solid $blue;
      outline: 2px solid $blue;
    }
  }

  &[light] {
    color: $dark;
    background: $light;
  }

  &[dark] {
    color: $light;
    background: $dark;
  }
}

button-model {
  display: block;
  position: relative;
  margin: 0;
  border: 0;
  padding: 0;
  outline: none;
  transition: all 0.1s linear;
  overflow: hidden;
  font-weight: 500;

  @extend .tac;

  // if the button is not diabled
  &:not(:disabled) {
    cursor: pointer;
  }

  // hover and focus mode
  &:hover,
  &:focus {
    outline: 0;
    text-decoration: none;
  }

  // ----------
  // a totally round button (just with an icon ofc)
  // ---------------
  [circled] {
    border-radius: 50%;

    &[circled="small"] {
      height: 2em;
      width: 2em;
    }
  }

  [icon-only] {
    width: 3em;
    height: 3em;
    padding: 0;
    text-align: center;

    i {
      line-height: 1.8em;
    }
  }

  // ----------
  // light or dark modes of the buttons
  // ---------------
  [light] {
    color: $dark;
  }

  [dark] {
    color: $light;
  }

  // ----------
  // shadow behaviour
  // ----------
  &[hover-shadowed] {
    &:hover {
      @extend .mshd-2;
    }

    &:active {
      box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 3px 0px,
        rgba(0, 0, 0, 0.06) 0px 1px 2px 0px;
    }
  }

  [text-shadowed] {
    text-shadow: 0 1px 1.6px rgba(0, 0, 0, 0.42);

    &[text-shadowed="blurred"] {
      text-shadow: 0 1px 6px rgba(0, 0, 0, 0.24);
    }
  }

  // ----------
  // sizes
  // ----------
  &[size] {
    &[size="wide"] {
      padding: 0.2em 2.2em 0;
      line-height: 3.4em;
    }

    &[size="std"] {
      padding: 0.2em 1.4em 0;
      line-height: 2.6em;
    }

    &[size="smol"] {
      padding: 0.01em 1.2em;
    }
  }

  &.wholebottom {
    position: relative;
    line-height: 2.8em;
    text-align: center;
    font-size: 1em;
    width: 100%;
    text-shadow: 0 2px 1px rgba(100, 108, 114, 0.42);

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      display: block;
      height: 100%;
      width: 100%;
      background-color: rgba(0, 0, 0, 0);
      transition: all 0.1s linear;
    }

    &:hover {
      &::before {
        background-color: rgba(0, 0, 0, 0.12);
      }
    }

    &:active {
      &::before {
        background-color: rgba(0, 0, 0, 0.24);
      }
    }
  }

  // ----------
  // colors
  // ----------
  &[color] {
    &[color="light"] {
      background-color: $light;
      color: $dark;
    }

    &[color="green"] {
      background-color: green;
      color: $light;
    }

    &[color="pink"] {
      background-color: pink;
      color: $light;
    }

    &[color="red"] {
      background-color: $red;
      color: $light;
    }

    &[color="darkred"] {
      background-color: darkred;
      color: $light;
    }

    &[color="blue"] {
      background-color: $blue;
      color: $light;
    }

    &[color="lila"] {
      background-color: purple;
      color: $light;
    }

    &[color="grey"] {
      background-color: grey;
      color: $light;
    }

    &[color="orange"] {
      background-color: $orange;
      color: $dark;
    }

    &[color="orange1"] {
      background-color: $orange1;
      color: $dark;
    }

    &[color="orange2"] {
      background-color: $orange2;
      color: $dark;
    }

    &[color="orange3"] {
      background-color: $orange3;
      color: $dark;
    }

    &[color="orange4"] {
      background-color: $orange4;
      color: $dark;
    }

    &[color="orange5"] {
      background-color: $orange5;
      color: $dark;
    }

    &[color="orange6"] {
      background-color: $orange6;
      color: $dark;
    }
  }

  .icon i::before {
    margin-top: 12px;
  }

  &[disabled] {
    opacity: 0.6;
    box-shadow: 0 !important;
    cursor: default;
  }
}

time-picker {
  @extend .disbl;

  $size: 3em;
  $time-size: 2em;

  .tp-inr {
    gap: $gap-std;

    @extend .disfl, .fldirrow, .flCenter;

    .time {
      &::after {
        content: "";
        display: block;
        clear: both;
      }

      .show {
        background: $orange4;
        padding: 0.6em 1em 0;

        @extend .mshd-1, .posrel, .lt;

        span {
          display: block;
          position: absolute;
          text-transform: uppercase;
          font-size: 0.8em;
          color: rgba(0, 0, 0, 0.32);

          @extend .tac, .align-mid-horiz;
        }

        input {
          pointer-events: none;
          height: 100%;
          width: $time-size;
          line-height: $time-size;
          background: transparent;
          outline: 0;
          border: 0;
          padding: 0;
          margin: 0;
          font-size: 2.8em;
          color: $dark;

          @extend .tac;
        }

        &:first-of-type {
          border-radius: 24px 0 0 24px;
          border-right: 1px solid $dark;
        }

        &:last-of-type {
          border-radius: 0 24px 24px 0;
        }
      }
    }

    .arrow {
      background: $light;
      height: $size;
      width: $size;
      line-height: $size;
      cursor: pointer;

      @extend .mshd-1, .rd18, .tran-all, .tac;

      &:hover {
        background: $orange6;
      }

      &:active {
        background: $orange5;
      }

      &.right {
        &:hover {
          transform: translateX(4%);
        }
      }

      &.left {
        &:hover {
          transform: translateX(-4%);
        }
      }
    }
  }
}

user-icon {
  display: block;
  height: 3em;
  width: 3em;
  line-height: 3em;
  text-transform: uppercase;
  font-weight: 600;

  &[color] {
    &[color^="purple"] {
      background: $purple;
      color: $light;

      &[color$="1"] {
        background: $purple1;
        color: $light;
      }

      &[color$="2"] {
        background: $purple2;
        color: $light;
      }

      &[color$="3"] {
        background: $purple3;
        color: $light;
      }

      &[color$="4"] {
        background: $purple4;
        color: $dark;
      }

      &[color$="5"] {
        background: $purple5;
        color: $dark;
      }

      &[color$="6"] {
        background: $purple6;
        color: $dark;
      }
    }

    &[color="orange"] {
      background: $orange;
      color: $dark;
    }

    &[color="orange1"] {
      background: $orange1;
      color: $dark;
    }

    &[color="orange2"] {
      background: $orange2;
      color: $dark;
    }

    &[color="orange3"] {
      background: $orange3;
      color: $dark;
    }

    &[color="orange4"] {
      background: $orange4;
      color: $dark;
    }
  }
}

outlined-text {
  border: 1px solid rgba(0, 0, 0, 0.12);
  background: white;
  line-height: 3em;
  height: 3.06em;
  width: auto;
  color: $dark;
  padding: 0 1.2em 0;
  font-weight: 500;
  gap: 0.6em;

  @extend .disfl, .fldirrow, .flCenter;

  i {
    display: block;
  }

  span {
    padding-top: 0.2em;
    display: block;
    font-weight: 600;
  }
}
